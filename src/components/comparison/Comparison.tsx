import { Flex, FlexProps, Text, Box } from '@chakra-ui/react';
import React, { FunctionComponent } from 'react';

const LOGO = (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    width='120'
    height='24'
    viewBox='0 0 120 24'
    fill='none'
  >
    <g clipPath='url(#clip0_2080_24777)'>
      <path
        d='M36.1415 2.62686C33.4768 2.62686 30.9608 3.65557 29.0562 5.52296L15.7945 18.5326C14.27 20.0282 12.2539 20.8504 10.122 20.8504C5.68497 20.8504 2.07001 17.2685 2.02043 12.8438C1.96672 8.44798 5.48253 4.77518 9.87836 4.6471C12.101 4.581 14.2122 5.41141 15.7945 6.96068L19.1739 10.2782C19.3557 10.4558 19.649 10.4517 19.8267 10.2699L20.5951 9.48908C20.7728 9.30731 20.7687 9.01398 20.5869 8.83633L17.2074 5.51882C15.3028 3.65557 12.7868 2.62686 10.118 2.62686C4.44142 2.62686 -0.16094 7.32838 0.00431549 13.0462C0.157176 18.2683 4.32162 22.5566 9.53537 22.85C12.415 23.0111 15.1623 21.9741 17.2033 19.9704L30.465 6.96068C31.9894 5.46512 34.0056 4.64297 36.1374 4.64297C40.5745 4.64297 44.1853 8.22488 44.239 12.6496C44.2969 17.0454 40.7769 20.7182 36.3852 20.8463C34.1626 20.9123 32.0514 20.082 30.4691 18.5326L27.0897 15.2152C26.9079 15.0375 26.6146 15.0417 26.4369 15.2235L25.6685 16.0042C25.4908 16.186 25.495 16.4794 25.6767 16.6571L29.0562 19.9745C31.0971 21.9782 33.8444 23.0153 36.7241 22.8542C41.942 22.5649 46.1065 18.2724 46.2592 13.0503C46.4245 7.32838 41.8222 2.62686 36.1415 2.62686Z'
        fill='url(#paint0_linear_2080_24777)'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M119.036 20.2386C119.164 20.2386 119.296 20.1601 119.375 20.0279C119.428 19.8998 119.428 19.7676 119.346 19.6312L114.446 13.0541L118.929 7.15861C119.007 7.05533 119.033 6.89833 118.953 6.76613C118.904 6.63392 118.772 6.55543 118.615 6.55543H117.359C117.202 6.55543 117.044 6.63392 116.966 6.76613L112.273 12.9261V0.581446C112.273 0.370746 112.088 0.188965 111.851 0.188965H110.753C110.542 0.188965 110.36 0.370746 110.36 0.581446V19.8461C110.36 20.0568 110.542 20.2386 110.753 20.2386H111.851C112.091 20.2386 112.273 20.0568 112.273 19.8461V13.2152L117.359 20.0568C117.462 20.1601 117.594 20.2386 117.751 20.2386H119.036ZM79.9902 14.7062V15.0987C79.9902 18.5856 77.9452 20.2092 74.1732 20.2092H69.166C68.9553 20.2092 68.7735 20.0274 68.7735 19.8167V1.89069C68.7735 1.65519 68.9553 1.47342 69.166 1.47342H73.7518C77.5775 1.47342 79.6473 2.83677 79.6473 6.26995V6.53023C79.6473 8.44306 79.0689 9.70317 77.9163 10.4096C79.2837 11.2235 79.9902 12.6364 79.9902 14.7062ZM70.7111 9.64941H73.8303C76.4785 9.64941 77.7345 8.83554 77.7345 6.45173V6.29473C77.7345 3.96051 76.5033 3.22925 73.8303 3.22925H70.7111V9.64941ZM78.1021 14.7847C78.1021 12.4258 76.7925 11.3764 74.2476 11.3764H70.7111V18.4286H74.2476C76.8421 18.4286 78.1021 17.4081 78.1021 15.0987V14.7847ZM65.6543 19.8992L65.6578 19.9103C65.6817 19.9852 65.7054 20.0599 65.6543 20.1347C65.6006 20.2132 65.5221 20.2379 65.4435 20.2379H63.9232C63.7414 20.2379 63.5555 20.1594 63.4771 20.0025L60.5148 14.9952L57.5278 20.0025C57.4494 20.1594 57.2676 20.2379 57.0816 20.2379H55.5613C55.4828 20.2379 55.4043 20.2132 55.3506 20.1347C55.3258 20.0561 55.3258 19.9776 55.3506 19.8992L59.3869 13.1361L55.6646 6.8977C55.6398 6.8192 55.6398 6.74071 55.6646 6.66221C55.7183 6.58372 55.7968 6.53001 55.8753 6.53001H57.4205C57.5774 6.53001 57.7592 6.6333 57.8666 6.79029L60.5148 11.2439L63.1631 6.79029C63.2415 6.6333 63.4233 6.53001 63.6092 6.53001H65.1296C65.2081 6.53001 65.2866 6.58372 65.3403 6.66221C65.365 6.74071 65.365 6.8192 65.3403 6.8977L61.6179 13.1361L65.6543 19.8992ZM92.5161 19.8212V11.1452C92.5161 8.0508 91.0205 6.53044 88.0666 6.52632C85.6043 6.52632 83.7451 7.57569 83.3237 9.93467C83.2742 10.1702 83.456 10.3809 83.6915 10.3809H84.8441C85.0838 10.3809 85.2903 10.2239 85.344 9.98843C85.5795 8.91426 86.3148 8.12929 87.9922 8.12929C89.7728 8.12929 90.6115 9.10016 90.6115 11.0915V11.8765H88.5128C83.3486 11.8765 82.7991 14.8635 82.7991 16.1483V16.359C82.7991 18.7429 84.3731 20.2384 86.9139 20.2384C88.4838 20.2384 89.6654 19.8996 90.6074 19.1394V19.8212C90.6074 20.0608 90.7891 20.2425 91.0247 20.2425H92.1236C92.3343 20.2425 92.5161 20.0566 92.5161 19.8212ZM88.6119 13.529H90.5991V15.5989C90.5991 17.5117 89.3432 18.5611 87.1411 18.5611C85.439 18.5611 84.6789 17.8546 84.6789 16.2557V16.1772C84.6789 14.4214 85.9926 13.529 88.6119 13.529ZM105.121 7.84089C105.906 8.67957 106.328 9.83224 106.328 11.1708V19.8178C106.328 20.0285 106.146 20.2103 105.906 20.2103H104.807C104.597 20.2103 104.415 20.0285 104.415 19.8178V11.1708C104.415 9.57194 103.076 8.23338 101.453 8.23338C99.8533 8.23338 98.5437 9.57194 98.5437 11.1708V19.8178C98.5437 20.0285 98.3623 20.2103 98.127 20.2103H97.0281C96.8174 20.2103 96.6105 20.0285 96.6105 19.8178V6.92372C96.6105 6.68824 96.8212 6.50645 97.0281 6.50645H98.127C98.3623 6.50645 98.5437 6.68824 98.5437 6.92372V7.63019C99.4073 6.84523 100.354 6.50233 101.717 6.50233C103.101 6.50645 104.254 6.97743 105.121 7.84089Z'
        fill='white'
      />
    </g>
    <defs>
      <linearGradient
        id='paint0_linear_2080_24777'
        x1='5.5315'
        y1='0.0964097'
        x2='15.8957'
        y2='34.3589'
        gradientUnits='userSpaceOnUse'
      >
        <stop stopColor='#76EED8' />
        <stop offset='0.118756' stopColor='#76EE99' />
        <stop offset='0.291667' stopColor='#4891FF' />
        <stop offset='0.452857' stopColor='#CB37FF' />
        <stop offset='0.642525' stopColor='#EF76B6' />
        <stop offset='0.865093' stopColor='#FFD159' />
      </linearGradient>
      <clipPath id='clip0_2080_24777'>
        <rect
          width='120'
          height='23.622'
          fill='white'
          transform='translate(0 0.188965)'
        />
      </clipPath>
    </defs>
  </svg>
);

const ITEM_PROPS: FlexProps = {
  h: '64px',
  alignItems: 'center',
  justify: 'center',
  borderRadius: '4px',
  bg: 'linear-gradient(180deg, #343236 0%, #38343F 100%)',
  w: '33%',
  fontWeight: '700',
  letterSpacing: '0.4px',
  fontFamily: 'HarmonyOS Sans SC',
};

const Comparison: FunctionComponent<
  FlexProps & {
    data: {
      title: string;
      items: string[];
    };
  }
> = ({ data: { title, items }, ...rest }) => {
  const [highlight, secondary, ...itemRest] = items;
  return (
    <Flex direction={'column'} w='100%' pt='106px' {...rest}>
      <Text
        textAlign={'center'}
        fontSize={'56px'}
        fontWeight={'700'}
        mb='32px'
        fontFamily={'Orbitron'}
      >
        {title}
      </Text>

      <Box
        mt='60px'
        px='16px'
        border={'1px solid rgba(255, 255, 255, 0.08)'}
        bgColor='#1D1C20'
        borderRadius={'24px'}
        pt='16px'
        pb='40px'
      >
        <Flex gap={'14px'} mb='62px'>
          {['#F24822', '#1CC47D', '#FFDA1C'].map((i) => (
            <Box key={i} bg={i} borderRadius={'100%'} boxSize={'18px'} />
          ))}
        </Flex>

        <Flex
          rowGap={'4px'}
          flexWrap={'wrap'}
          justify={'space-between'}
          alignItems={'end'}
        >
          <Flex {...ITEM_PROPS}>{LOGO}</Flex>
          <Flex
            {...ITEM_PROPS}
            h={'88px'}
            bg={
              'linear-gradient(137deg, #76EED8 -4.34%, #76EE99 8.73%, #4891FF 27.75%, #CB37FF 45.49%, #EF76B6 66.36%, #FFD159 90.86%)'
            }
            fontSize={'20px'}
          >
            {highlight}
          </Flex>
          <Flex {...ITEM_PROPS} bg='#2B292E'>
            {secondary}
          </Flex>
          {itemRest?.map((item, i) => (
            <Flex
              key={`${item}${i}`}
              {...ITEM_PROPS}
              bg={(i + 2) % 3 === 0 ? '#3E3D42' : ITEM_PROPS.bg}
            >
              {item}
            </Flex>
          ))}
        </Flex>
      </Box>
    </Flex>
  );
};

export default Comparison;
