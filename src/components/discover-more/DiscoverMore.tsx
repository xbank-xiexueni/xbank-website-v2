import { Flex, FlexProps, SimpleGrid, Text, chakra } from '@chakra-ui/react';
import { navigate } from 'gatsby';
import React, { FunctionComponent, useMemo } from 'react';

const ROUTES = [
  {
    name: 'Buy Now Pay Later',
    route: '/buy-now-pay-later',
    icon: (
      <svg
        width='40'
        height='40'
        viewBox='0 0 40 40'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M6.25 10V30C6.25 30.663 6.51339 31.2989 6.98223 31.7677C7.45108 32.2366 8.08696 32.5 8.75 32.5H33.75C34.0815 32.5 34.3995 32.3683 34.6339 32.1339C34.8683 31.8995 35 31.5815 35 31.25V13.75C35 13.4185 34.8683 13.1005 34.6339 12.8661C34.3995 12.6317 34.0815 12.5 33.75 12.5H8.75C8.08696 12.5 7.45108 12.2366 6.98223 11.7677C6.51339 11.2989 6.25 10.663 6.25 10ZM6.25 10C6.25 9.337 6.51339 8.70108 6.98223 8.23223C7.45108 7.76339 8.08696 7.5 8.75 7.5H30'
          stroke='white'
          strokeWidth='1.25'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M28.125 24.375C29.1605 24.375 30 23.5355 30 22.5C30 21.4645 29.1605 20.625 28.125 20.625C27.0895 20.625 26.25 21.4645 26.25 22.5C26.25 23.5355 27.0895 24.375 28.125 24.375Z'
          fill='white'
        />
      </svg>
    ),
  },
  {
    name: 'Loans for Loans',
    route: '/loans-for-loans',
    icon: (
      <svg
        width='40'
        height='40'
        viewBox='0 0 40 40'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M12.9993 14.5453H12.0549C11.554 14.5453 11.0735 14.7475 10.7193 15.1075C10.365 15.4674 10.166 15.9556 10.166 16.4646V17.4242M27.0666 14.5453H28.0111C28.512 14.5453 28.9924 14.7475 29.3467 15.1075C29.701 15.4674 29.9 15.9556 29.9 16.4646V17.4242M12.9993 25.1011H12.0549C11.554 25.1011 11.0735 24.8989 10.7193 24.539C10.365 24.179 10.166 23.6908 10.166 23.1819V22.2222M27.0666 25.1011H28.0111C28.512 25.1011 28.9924 24.8989 29.3467 24.539C29.701 24.179 29.9 23.6908 29.9 23.1819V22.2222'
          stroke='white'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M29.4551 34.5457L9.45508 34.5457C8.39421 34.5457 7.3768 34.1243 6.62665 33.3741C5.87651 32.624 5.45508 31.6066 5.45508 30.5457V8.54519C5.45508 7.4843 5.87651 6.46687 6.62665 5.7167C7.3768 4.96654 8.39421 4.5451 9.45508 4.5451H31.4551C32.516 4.5451 33.5334 4.96654 34.2835 5.7167C35.0337 6.46687 35.4551 7.4843 35.4551 8.54519V30.5457C35.4551 31.6066 35.0337 32.624 34.2835 33.3741C33.5334 34.1243 32.516 34.5457 31.4551 34.5457L29.4551 34.5457Z'
          stroke='white'
          strokeWidth='1.25'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <g clipPath='url(#clip0_2031_13731)'>
          <path
            d='M19.9684 14.1509L19.8945 14.4189V22.1939L19.9684 22.2725L23.3496 20.1392L19.9684 14.1509Z'
            fill='white'
          />
          <path
            d='M19.9691 14.1509L16.5879 20.1392L19.9691 22.2726V18.4988V14.1509Z'
            fill='white'
          />
          <path
            d='M19.9694 22.9559L19.9277 23.0101V25.7797L19.9694 25.9095L23.3526 20.8237L19.9694 22.9559Z'
            fill='white'
          />
          <path
            d='M19.9691 25.9094V22.9559L16.5879 20.8237L19.9691 25.9094Z'
            fill='white'
          />
          <path
            d='M19.9688 22.2724L23.3499 20.1392L19.9688 18.4987V22.2724Z'
            fill='white'
          />
          <path
            d='M16.5879 20.1392L19.9691 22.2724V18.4987L16.5879 20.1392Z'
            fill='white'
          />
        </g>
        <defs>
          <clipPath id='clip0_2031_13731'>
            <rect
              width='7'
              height='12'
              fill='white'
              transform='translate(16.498 14)'
            />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: 'Collateral Sell',
    route: '/collateral-sell',
    icon: (
      <svg
        width='40'
        height='40'
        viewBox='0 0 40 40'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M6 13L20 5L34 13V18.858C34 22.7831 32.5841 26.5764 30.0124 29.5417C27.4407 32.5069 23.8856 34.4449 20 35C16.1144 34.4449 12.5593 32.5069 9.98761 29.5417C7.41588 26.5764 6.00003 22.7831 6 18.858V13Z'
          stroke='white'
          strokeWidth='1.25'
        />
        <path
          d='M23 19.3748V17C23 16.2044 22.6839 15.4413 22.1213 14.8787C21.5587 14.3161 20.7956 14 20 14C19.2044 14 18.4413 14.3161 17.8787 14.8787C17.3161 15.4413 17 16.2044 17 17V19.3748'
          stroke='white'
          strokeWidth='1.25'
        />
        <path
          d='M15 24C15 24.7956 15.3161 25.5587 15.8787 26.1213C16.4413 26.6839 17.2044 27 18 27H22C22.7956 27 23.5587 26.6839 24.1213 26.1213C24.6839 25.5587 25 24.7956 25 24V20H15V24Z'
          fill='white'
          stroke='white'
          strokeWidth='1.5'
        />
      </svg>
    ),
  },
  {
    name: 'Installment Payments',
    route: '/installment-payments',
    icon: (
      <svg
        width='40'
        height='40'
        viewBox='0 0 40 40'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <g clipPath='url(#clip0_2031_13747)'>
          <path
            d='M2.88116 28.1043C1.31906 26.5422 1.31907 24.0095 2.88116 22.4475L20.6804 4.64822C21.3259 4.00273 22.1727 3.59744 23.0804 3.49966L32.4418 2.49108C34.8525 2.23136 36.9381 4.159 36.8687 6.58266L36.5727 16.9105C36.5434 17.9313 36.1248 18.9023 35.4027 19.6244L17.7304 37.2967C16.1683 38.8588 13.6356 38.8588 12.0735 37.2967L2.88116 28.1043Z'
            stroke='white'
            strokeWidth='1.25'
          />
          <path
            d='M25 18C26.1045 18 27 17.1045 27 16C27 14.8955 26.1045 14 25 14C23.8955 14 23 14.8955 23 16C23 17.1045 23.8955 18 25 18Z'
            fill='white'
          />
          <path
            d='M29.375 16C29.375 18.4162 27.4162 20.375 25 20.375C22.5838 20.375 20.625 18.4162 20.625 16C20.625 13.5838 22.5838 11.625 25 11.625C27.4162 11.625 29.375 13.5838 29.375 16Z'
            stroke='white'
            strokeWidth='1.25'
          />
        </g>
        <defs>
          <clipPath id='clip0_2031_13747'>
            <rect width='40' height='40' fill='white' />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: 'Sell on Credit',
    route: '/sell-on-credit',
    icon: (
      <svg
        width='40'
        height='40'
        viewBox='0 0 40 40'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M26.25 19.5C22.7982 19.5 20 16.7018 20 13.25C20 9.79822 22.7982 7 26.25 7C29.7018 7 32.5 9.79822 32.5 13.25C32.5 16.7018 29.7018 19.5 26.25 19.5Z'
          stroke='white'
          strokeWidth='1.25'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M29.7388 20.8782L27.6543 21.4817C27.6485 21.5456 27.6485 21.6099 27.6543 21.6737C27.6653 22.3805 27.4476 23.0715 27.0345 23.641C26.6215 24.2106 26.0358 24.6276 25.3669 24.8281C24.6683 25.0127 23.9584 25.1502 23.2419 25.2396C21.8571 25.4502 20.4598 25.5649 19.0596 25.5825H17.2459C17.0377 25.5979 16.8305 25.5411 16.6584 25.4215C16.4862 25.3019 16.3593 25.1265 16.2984 24.9242C16.2493 24.7747 16.2371 24.6155 16.263 24.4602C16.289 24.3049 16.3522 24.1585 16.4471 24.0339C16.5421 23.9091 16.6659 23.8101 16.8075 23.7452C16.9492 23.6805 17.1044 23.6521 17.2594 23.6624C19.0144 23.6717 20.7683 23.5709 22.511 23.3606C23.269 23.251 24.0269 23.1137 24.7578 22.9492C25.073 22.8464 25.3429 22.6352 25.5208 22.3522C25.6986 22.0694 25.7735 21.7323 25.7324 21.3993C25.6789 21.084 25.526 20.7946 25.2966 20.5745C25.0673 20.3545 24.7738 20.2156 24.46 20.1787L20.183 19.9318L16.1225 19.7125C15.1587 19.6337 14.1988 19.9061 13.4155 20.4805L5.48399 26.4054C5.26506 26.5544 5.10648 26.7784 5.03733 27.0362C4.98426 27.2371 4.98784 27.4489 5.04766 27.6477C5.10747 27.8465 5.22113 28.0244 5.3757 28.1609L9.59863 32.5909C9.69404 32.7114 9.81266 32.811 9.94728 32.8836C10.0819 32.9561 10.2297 33.0001 10.3816 33.013C10.5336 33.0259 10.6866 33.0072 10.8312 32.9582C10.9758 32.9092 11.109 32.8309 11.2228 32.728C11.4095 32.5861 11.5978 32.4475 11.7855 32.3094C12.1421 32.0469 12.4965 31.786 12.8335 31.5074C13.0638 31.3136 13.3347 31.1759 13.6256 31.1046C13.9165 31.0332 14.2196 31.0304 14.5118 31.096C15.1448 31.1926 15.8223 31.2667 16.4588 31.3364C16.8158 31.3755 17.1599 31.4131 17.476 31.4525C17.7639 31.4884 18.0516 31.5214 18.339 31.5542C18.93 31.622 19.5189 31.6894 20.1018 31.7817C20.7828 31.8965 21.4796 31.8694 22.1499 31.702C22.8201 31.5345 23.4496 31.2304 23.9999 30.8079L34.2594 23.059C34.5124 22.8894 34.7145 22.6526 34.8434 22.3744C34.9724 22.0961 35.0231 21.7872 34.9903 21.4817C34.9704 21.2416 34.9004 21.0085 34.7849 20.798C34.6695 20.5873 34.5111 20.404 34.3205 20.26C34.1298 20.1161 33.9111 20.0148 33.6789 19.963C33.4468 19.9111 33.2063 19.9098 32.9735 19.9593C32.2844 20.1426 31.5953 20.3426 30.9096 20.5416C30.5179 20.6552 30.1274 20.7686 29.7388 20.8782Z'
          stroke='white'
          strokeWidth='1.25'
        />
      </svg>
    ),
  },
];
const DiscoverMore: FunctionComponent<FlexProps> = ({ ...rest }) => {
  const currentData = useMemo(() => {
    const isBrowser = typeof window !== 'undefined';
    if (!isBrowser) return [];
    return ROUTES.filter((i) => !window.location.pathname.startsWith(i.route));
  }, []);
  return (
    <Flex direction={'column'} w='100%' pt='36px' gap={'32px'} {...rest}>
      <Text
        fontSize={'56px'}
        textAlign={'center'}
        fontWeight={'900'}
        fontFamily={'Orbitron'}
      >
        Discover More
      </Text>

      <SimpleGrid
        columns={2}
        spacingX={'24px'}
        spacingY={'48px'}
        px='16px'
        py='40px'
      >
        {currentData?.map((i) => (
          <Flex
            key={i.name}
            border='none'
            padding='2px'
            borderRadius='48px'
            backgroundClip='content-box,padding-box'
            _hover={{
              '#arrow': {
                w: '24PX',
                h: '16px',
              },
              bgImage:
                'linear-gradient(#fff, #fff),linear-gradient(to bottom right, #76EED8, #76EE99, #4891FF, #CB37FF, #EF76B6, #FFD159)',
            }}
            bgImage={
              'linear-gradient(rgba(255, 255, 255, 0.40),rgba(255, 255, 255, 0.40)),linear-gradient(to bottom right,rgba(255, 255, 255, 0.40),rgba(255, 255, 255, 0.40))'
            }
          >
            <Flex
              as='button'
              py='10px'
              w='100%'
              alignItems={'center'}
              justify={'space-between'}
              borderRadius={'48px'}
              bg='#1D1C20'
              // boxShadow={
              //   '0px 10px 10px -5px rgba(0, 0, 0, 0.20), 0px 1px 2px 2px #525154 inset'
              // }
              onClick={() => {
                navigate(i.route);
              }}
              border='none'
              px='40px'
              justifyContent={'space-between'}
            >
              <Flex
                alignItems={'center'}
                gap={'24px'}
                fontSize={'20px'}
                fontWeight={'500px'}
              >
                {i.icon}
                <Text fontFamily={'HarmonyOS Sans SC'}>{i.name}</Text>
              </Flex>
              <chakra.svg
                xmlns='http://www.w3.org/2000/svg'
                width='0'
                height='0'
                viewBox='0 0 26 16'
                fill='none'
                id='arrow'
              >
                <chakra.path
                  d='M1 7C0.447715 7 1.19209e-07 7.44772 1.19209e-07 8C1.19209e-07 8.55228 0.447715 9 1 9L1 7ZM25.7071 8.70711C26.0976 8.31658 26.0976 7.68342 25.7071 7.29289L19.3431 0.928933C18.9526 0.538409 18.3195 0.538409 17.9289 0.928933C17.5384 1.31946 17.5384 1.95262 17.9289 2.34315L23.5858 8L17.9289 13.6569C17.5384 14.0474 17.5384 14.6805 17.9289 15.0711C18.3195 15.4616 18.9526 15.4616 19.3431 15.0711L25.7071 8.70711ZM1 9L25 9V7L1 7L1 9Z'
                  fill='url(#paint0_linear_2005_20895)'
                />
                <chakra.defs>
                  <chakra.linearGradient
                    id='paint0_linear_2005_20895'
                    x1='0.390625'
                    y1='8.5'
                    x2='29.2795'
                    y2='8.5'
                    gradientUnits='userSpaceOnUse'
                  >
                    <chakra.stop stopColor='#76EED8' />
                    <chakra.stop offset='0.118756' stopColor='#76EE99' />
                    <chakra.stop offset='0.291667' stopColor='#4891FF' />
                    <chakra.stop offset='0.452857' stopColor='#CB37FF' />
                    <chakra.stop offset='0.642525' stopColor='#EF76B6' />
                    <chakra.stop offset='0.865093' stopColor='#FFD159' />
                  </chakra.linearGradient>
                </chakra.defs>
              </chakra.svg>
            </Flex>
          </Flex>
        ))}
      </SimpleGrid>
    </Flex>
  );
};

export default DiscoverMore;
